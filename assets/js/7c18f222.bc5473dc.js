"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[267],{7337:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var t=r(3117),o=(r(7294),r(3905));const s={title:"useAdminUsers",description:"API reference for the useAdminUsers hook",tags:["admin","hooks","users"]},a=void 0,i={unversionedId:"docs/core/admin/hooks/use-admin-users",id:"docs/core/admin/hooks/use-admin-users",title:"useAdminUsers",description:"API reference for the useAdminUsers hook",source:"@site/docs/docs/01-core/admin/04-hooks/use-admin-users.mdx",sourceDirName:"docs/01-core/admin/04-hooks",slug:"/docs/core/admin/hooks/use-admin-users",permalink:"/docs/core/admin/hooks/use-admin-users",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/admin/04-hooks/use-admin-users.mdx",tags:[{label:"admin",permalink:"/tags/admin"},{label:"hooks",permalink:"/tags/hooks"},{label:"users",permalink:"/tags/users"}],version:"current",frontMatter:{title:"useAdminUsers",description:"API reference for the useAdminUsers hook",tags:["admin","hooks","users"]},sidebar:"docs",previous:{title:"useAdminRoles",permalink:"/docs/core/admin/hooks/use-admin-roles"},next:{title:"useEnterprise",permalink:"/docs/core/admin/hooks/use-enterprise"}},c={},u=[{value:"Usage",id:"usage",level:2},{value:"Typescript",id:"typescript",level:2},{value:"Fetch all users",id:"fetch-all-users",level:3},{value:"Fetch one user",id:"fetch-one-user",level:3}],l={toc:u};function p(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An abstraction around ",(0,o.kt)("inlineCode",{parentName:"p"},"react-query"),"'s ",(0,o.kt)("inlineCode",{parentName:"p"},"useQuery")," hook. It can be used to fetch one ore more admin users."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"The hooks can receive two optional parameters:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"query params: an object containing the query params to be sent to the API. They are going to be\nstringified by ",(0,o.kt)("inlineCode",{parentName:"li"},"qs"),". All params are equal except ",(0,o.kt)("inlineCode",{parentName:"li"},"id"),", which is used to fetch a single users, if\nit is passed."),(0,o.kt)("li",{parentName:"ol"},"options: an object containing the options to be passed to ",(0,o.kt)("inlineCode",{parentName:"li"},"useQuery"),".")),(0,o.kt)("p",null,"It returns an object containing some of the react-query attributes."),(0,o.kt)("h2",{id:"typescript"},"Typescript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { UseQueryOptions } from 'react-query'\n\ntype User = object;\n\nuseAdminUsers(queryParams: object, reactQueryOptions: UseQueryOptions): {\n    users: User[];\n    pagination: {\n        page: number,\n        pageSize: number,\n        total: number,\n    } | null;\n    isLoading: boolean;\n    isError: boolean;\n    refetch: () => Promise<void>;\n};\n")),(0,o.kt)("h3",{id:"fetch-all-users"},"Fetch all users"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useAdminUsers } from 'path/to/hooks';\n\nconst MyComponent = ({ onMoveItem }) => {\n  const { users, isLoading, refetch } = useAdminUsers();\n\n  return /* ... */;\n};\n")),(0,o.kt)("h3",{id:"fetch-one-user"},"Fetch one user"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Box } from '@strapi/design-system';\n\nimport { useAdminUsers } from 'path/to/hooks';\n\nconst MyComponent = ({ onMoveItem }) => {\n  const { users: [user], isLoading, refetch } = useAdminUsers({ id: 1 });\n\n  return /* ... */;\n};\n")))}p.isMDXComponent=!0},3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>d});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function s(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?s(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(c,".").concat(d)]||m[d]||p[d]||s;return r?t.createElement(f,a(a({ref:n},l),{},{components:r})):t.createElement(f,a({ref:n},l))}));function d(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=r[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);