"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3986],{6871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(3117),i=(n(7294),n(3905));const r={title:"plugin:build",description:"An in depth look at the plugin:build command of the Strapi CLI",tags:["CLI","commands","plugins","building"]},l=void 0,o={unversionedId:"docs/core/strapi/commands/plugin/build",id:"docs/core/strapi/commands/plugin/build",title:"plugin:build",description:"An in depth look at the plugin:build command of the Strapi CLI",source:"@site/docs/docs/01-core/strapi/commands/plugin/01-build.md",sourceDirName:"docs/01-core/strapi/commands/plugin",slug:"/docs/core/strapi/commands/plugin/build",permalink:"/docs/core/strapi/commands/plugin/build",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/strapi/commands/plugin/01-build.md",tags:[{label:"CLI",permalink:"/tags/cli"},{label:"commands",permalink:"/tags/commands"},{label:"plugins",permalink:"/tags/plugins"},{label:"building",permalink:"/tags/building"}],version:"current",sidebarPosition:1,frontMatter:{title:"plugin:build",description:"An in depth look at the plugin:build command of the Strapi CLI",tags:["CLI","commands","plugins","building"]},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/core/strapi/commands/plugin/overview"},next:{title:"Event Hub",permalink:"/docs/core/strapi/event-hub"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:3},{value:"Setting up your package",id:"setting-up-your-package",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Transpilation target",id:"transpilation-target",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"plugin:build")," command is used to build plugins in a CJS/ESM compatible format that can be instantly published to NPM.\nThis is done by looking at the export fields of a package.json e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"module"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"exports"),". By using the\nexports map specifically we can build dual plugins that support a server & client output."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"strapi plugin:build\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Bundle your strapi plugin for publishing.\n\nOptions:\n  -y, --yes    Skip all confirmation prompts (default: false)\n  -d, --debug  Enable debugging mode with verbose logs (default: false)\n  -h, --help   Display help for command\n")),(0,i.kt)("h2",{id:"setting-up-your-package"},"Setting up your package"),(0,i.kt)("p",null,"In order to build a plugin you need to have a ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," that must contain the following fields:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"name")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"version"))),(0,i.kt)("p",null,"In regards to the export keys of your package.json because a plugin ",(0,i.kt)("em",{parentName:"p"},"typically")," has both a server and client\nside output we recommend doing the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "@strapi/plugin",\n  "version": "1.0.0",\n  "exports": {\n    "./strapi-admin": {\n      "types": "./dist/admin/index.d.ts",\n      "source": "./admin/src/index.ts",\n      "import": "./dist/admin/index.mjs",\n      "require": "./dist/admin/index.js",\n      "default": "./dist/admin/index.js"\n    },\n    "./strapi-server": {\n      "types": "./dist/server/index.d.ts",\n      "source": "./server/src/index.ts",\n      "import": "./dist/server/index.mjs",\n      "require": "./dist/server/index.js",\n      "default": "./dist/server/index.js"\n    },\n    "./package.json": "./package.json"\n  }\n}\n')),(0,i.kt)("p",null,"We don't use ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"module")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," on the root level of the package.json because of the aforementioned reason (plugins don't have one entry).\nIf you've not written your plugin in typescript, you can omit the ",(0,i.kt)("inlineCode",{parentName:"p"},"types")," value of an export map. This is the minimum setup required to build a plugin."),(0,i.kt)("h2",{id:"how-it-works"},"How it works"),(0,i.kt)("p",null,"The command sequence can be visualised as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Load package.json"),(0,i.kt)("li",{parentName:"ul"},"Validate that package.json against a ",(0,i.kt)("inlineCode",{parentName:"li"},"yup")," schema"),(0,i.kt)("li",{parentName:"ul"},"Validate the ordering of an export map if ",(0,i.kt)("inlineCode",{parentName:"li"},"pkg.exports")," is defined"),(0,i.kt)("li",{parentName:"ul"},"Create a build context, this holds information like:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The transpilation target"),(0,i.kt)("li",{parentName:"ul"},"The external dependencies (that we don't want to bundle)"),(0,i.kt)("li",{parentName:"ul"},"Where the output should go e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"dist")),(0,i.kt)("li",{parentName:"ul"},"The exports we're about to use to create build tasks"))),(0,i.kt)("li",{parentName:"ul"},"Create a list of build tasks based on the ",(0,i.kt)("inlineCode",{parentName:"li"},"exports")," from the build context, these can currently either be ",(0,i.kt)("inlineCode",{parentName:"li"},'"build:js"')," or ",(0,i.kt)("inlineCode",{parentName:"li"},'"build:dts"')),(0,i.kt)("li",{parentName:"ul"},"Pass the build task to a specific task handler e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"vite")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"tsc")),(0,i.kt)("li",{parentName:"ul"},"Finish")),(0,i.kt)("h2",{id:"transpilation-target"},"Transpilation target"),(0,i.kt)("p",null,"There are three different runtimes available for plugins:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"node")," which equates to a ",(0,i.kt)("inlineCode",{parentName:"li"},"node16")," target"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"web")," which equates to a ",(0,i.kt)("inlineCode",{parentName:"li"},"esnext")," target"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"*")," (universal) which equates to ",(0,i.kt)("inlineCode",{parentName:"li"},'["last 3 major versions", "Firefox ESR", "last 2 Opera versions", "not dead", "node 16.0.0"]'))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"node")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"web")," targets are specifically used for the export maps with they keys ",(0,i.kt)("inlineCode",{parentName:"p"},"./strapi-server")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"./strapi-admin")," respectively.\nAny other export map values will be transpiled to the universal target. The universal target can be overwritten by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"browserslist"),"\nkey to your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," (seen below):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "@strapi/plugin",\n  "version": "1.0.0",\n  "browserslist": [\n    "last 3 major versions",\n    "Firefox ESR",\n    "last 2 Opera  versions",\n    "not dead",\n    "node 16.0.0"\n  ]\n}\n')))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,g=m["".concat(s,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);